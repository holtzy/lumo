---
title: "Soil Analysis"
subtitle: "This document provides the latest results of a few analysis run by Celesta lab. It also showcases what's possible to do with <code>lumo</code>, a minimalist quarto template."
format:
  lumo-html: 
    logo: "logo.png"                                     # Optional. Path to a logo displayed above the title
    github-repo: "https://github.com/holtzy/lumo"        # Optional. Adds a github corner at the top right
    primary-color: "red"
    self-contained: true
    is-particlejs-enabled: false                          # Optional: display interactive particles in the document header
    bg-image: "bg-image.jpg"                                         # Optional: link to an image for the header background
author: Holtz Yan
date: last-modified
---




## Introduction

Quarto is probably my favorite tool in the R/Python universe. Transforming your code and thoughts into a stunning report in one click always blows my mind.

While the default Quarto appearance **looks great**, there are [a few tweaks](https://www.productive-r-workflow.com/quarto-tricks) I always apply to elevate the report even further. Rather than manually adding them each time, I bundled everything into a custom format called [lumo](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template).


::: {.column-margin}

Btw, you can learn how to master Quarto thanks to my online course: [Productive R Workflow](https://www.productive-r-workflow.com)

:::


This document aims at showcasing how versatile the lumo format is. With a few tweaks, I made it **fit the brand** of a specific company.


## Load Packages

Make sure to load **all your packages** at the start of your document for clarity and consistency.

Notice that the code chunks are folded by default. You can adjust this behavior with the `code-fold` option in the document's YAML header.


```{r, warning=F, message=F}
library(tidyverse) 
library(hrbrthemes) # <1>
library(viridis) # <2>
library(patchwork) 
```

1. this package provides my favorite `ggplot2` theme: `theme_ipsum()`
2. because I was too lazy to find something better in the [R Color Finder](https://r-graph-gallery.com/color-palette-finder)!

:::{.callout}
By the way, you should open the code chunk that is folded above. ‚¨ÜÔ∏è
There is a little stunning surprise on its right hand side.
:::


## Dataviz theme

I strongly advise to create a dataviz theme that fits your company's brand. Here is one:

```{r}
scale_color_brand <- function() {
  custom_palette <- c( "#00496FFF", "#0F85A0FF", "#EDD746FF", "#ED8B00FF", "#DD4124FF")
  scale_color_manual(values = custom_palette)
}

theme_brand <- function() {
  theme_ipsum() +
    theme(
      plot.title = element_text(color = "red", size = 18, face = "bold"),
      plot.subtitle = element_text(margin = margin(b = 20)),
      axis.text.x = element_text(size = 7),
      axis.text.y = element_text(size = 7),
      plot.background = element_rect(fill = "#faf5f5", color = NA),
      plot.caption = element_text(hjust = 0)
    )
}
```

And now let's use it on a graph:

```{r, fig.width=9, fig.height=7}
# Create scatter plot
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
  geom_point(size = 3) +
  scale_color_brand() +
  
  # Add title, subtitle, and caption (footer)
  labs(
    title = "Sepal Length vs Sepal Width",
    subtitle = "The relationship between sepal length and sepal width is very strong inside\neach species. It's worth noting that Setosa is very different, with a higher\nsepal width and lower sepal length on average",
    caption = "Author: Yan Holtz\nData: coming from the batch #23 on the 3rd of October"
  ) +
  
  # Add annotation
  annotate("text", x = 7.5, y = 4.2, label = "Highest Sepal Width", color = "red", size = 4, hjust = 0) +
  
  # Customize the theme (optional)
  theme_brand()
```


## Lumo features

For a complete list of features, [visit the documentation](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!

Oh and since we're here, did you know you can easily include a full width interactive map with `leaflet` in a quarto doc? üòç
```{r}
#| column: screen
#| out-width: 100%

# Load the library.
library(leaflet)

# Make a map
leaflet() %>%
  addTiles() %>% # Add default OpenStreetMap map tiles
  addMarkers(lng = 174.768, lat = -36.852, popup = "The birthplace of R")
```




## Interactive table

It is very easy to insert an interactive table in your document thanks to the `DT` package. The output allows to filter rows, search for something and sort using a specific columns!

Install the library with `install.packages("DT")`. Then, just pass a dataframe to the `datatable()` function to get a stunning interactive output!

```{r}
library(DT)
data(iris)

# Make a table
datatable(iris, filter = "top")
```

::: {.column-margin}
<br/><br/><br/><br/><br/><br/>
I've added a bit of CSS to make the font smaller on DT tables by the way üôÇ
:::



## A grey section

::: {.cell .page-columns .page-full .column-screen .grey-section}
It's always good to have a grey section. Makes the document breath a bit. I've added a little utility class in `Lumo` to make sure you can make sections like this very easily. Check the [documentation](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!

Let's use this space to render a little equation:

$$
x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
$$
:::





## Quarto Tricks

`Lumo` is a great format, but to get the most out of it, you‚Äôll need to master a few Quarto tricks!

The good news? I‚Äôve compiled my 30+ favorite tips [in one place](https://www.productive-r-workflow.com/quarto-tricks). Just spend 30 minutes, and you'll be up to speed with all of them!

<hr/>

For example, if you're creating multiple plots, each highlighting different aspects of your dataset, consider using *pills* to organize them!


::: {.panel-tabset .nav-pills}

## Scatterplot

This is a good old scatterplot of the iris dataset. If you want to learn more about how to make graphs in R, visit my [R graph gallery](https://www.r-graph-gallery.com)!


```{r, fig.align='center', fig.width=6, fig.height=6, fig.align='left'}
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + 
    geom_point() +
    theme_brand() +
    scale_color_brand() +
    labs(
      title = "Sepal Length vs Sepal Width",
      subtitle = "Relationship between 2 numerical variables.",
      caption = "Author: Yan Holtz\nData: coming from the batch #44 on the 3rd of October"
    ) 
```

## Boxplot

You can also make a [boxplot](https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html), but please do not hide the underlying distribution! This is widely explain in my data-to-viz.com project in case you're not convinced üòã. Check the next tab to get convinced!

```{r, fig.align='center', fig.width=6, fig.height=6, fig.align='left'}
# create a dataset
data <- data.frame(
  name=c( rep("A",500), rep("B",500), rep("B",500), rep("C",20), rep('D', 100)  ),
  value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)

# Plot
data %>%
  ggplot( aes(x=name, y=value, fill=name)) +
    geom_boxplot() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    xlab("") +
    theme_brand() +
    scale_color_brand() +
    labs(
      title = "A boxplot that hides the underlying distribution",
      subtitle = "Never hide the underlying samples on a boxplot. You never know what's behind!? (check the next tab: with jittering)",
      caption = "Author: Yan Holtz\nData: coming from the batch #44 on the 3rd of October"
    ) 
```

## Jittering
See what's happening now that the individual data points are visible! Would be a shame to miss this.

```{r, fig.align='center', fig.width=6, fig.height=6, fig.align='left'}
data %>%
  ggplot( aes(x=name, y=value, fill=name)) +
    geom_boxplot() +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    xlab("") +
    theme_brand() +
    scale_color_brand() +
    labs(
      title = "A boxplot with jitter",
      subtitle = "This boxplot does NOT hide the underlying distribution.\nIt is much more powerful and reveals some massive differences between groups!",
      caption = "Author: Yan Holtz\nData: coming from the batch #44 on the 3rd of October"
    ) 
```


:::




## More Information

Learn how to use and how to customize `Lumo` [here](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template).







## Session Info

When creating a Quarto document, it's a good practice to include details about your **working environment**. 

This is easy to do‚Äîjust call `sessionInfo()`, and it will print out all your R and package versions. This simple step greatly enhances **reproducibility**.


<button type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" >Session Information</button><div id="collapseOne" class="accordion-collapse collapse"><div>


```{r}
sessionInfo()
```

</div></div>


